import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn.metrics import mean_squared_error

# Load the dataset (replace 'dataset.csv' with the actual path to your dataset)
data = pd.read_csv('dataset.csv')

# Split data into features and target variable
X = data[['Income', 'Schools', 'Hospitals', 'CrimeRates']]
y = data['HomePrices']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize XGBoost model
model = XGBRegressor()

# Train the model
model.fit(X_train, y_train)

# Predict on the testing set
y_pred = model.predict(X_test)

# Calculate root mean squared error
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
print(f"Root Mean Squared Error: {rmse}")

# Save the model
model.save_model('home_price_prediction_model.json')
